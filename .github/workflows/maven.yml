# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "develop", "main" ]
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      PROPERTY_FILE: src/main/resources/gcp.properties
      GCP_ACCESS_KEY_ID: ${{ secrets.GCP_ACCESS_KEY_ID }}
      GCP_SECRET_ACCESS_KEY: ${{ secrets.GCP_SECRET_ACCESS_KEY }}
      GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Create aws properties file
        run: |
          touch ${{ env.PROPERTY_FILE }}
            echo GCP_ACCESS_KEY_ID=${{ env.GCP_ACCESS_KEY_ID }} >> ${{ env.PROPERTY_FILE }}
            echo GCP_SECRET_ACCESS_KEY=${{ env.GCP_SECRET_ACCESS_KEY }} >> ${{ env.PROPERTY_FILE }}
            echo GCP_BUCKET_NAME=${{ env.GCP_BUCKET_NAME }} >> ${{ env.PROPERTY_FILE }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bi_java_gcp:latest
      

